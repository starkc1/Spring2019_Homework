


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             workshop4_asm_functions_prob, C
ODE, READONLY
    2 00000000         
    3 00000000                 EXPORT           aTask1
    4 00000000                 EXPORT           aTask2
    5 00000000                 EXPORT           aTask3
    6 00000000                 EXPORT           aTask4
    7 00000000         
    8 00000000                 ALIGN
    9 00000000         
   10 00000000         
   11 00000000         ; extern void aTask1(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M);
   12 00000000         ;r0 = arr1
   13 00000000         ;r1 = arr2
   14 00000000         ;r2 = arr3
   15 00000000         ;r3 = M
   16 00000000         aTask1  PROC
   17 00000000 B570            PUSH             {r4-r6, lr}
   18 00000002 F04F 0400       MOV              r4, #0      ;i
   19 00000006         aTask1_loop
   20 00000006 429C            CMP              r4, r3
   21 00000008 DA09            BGE              aTask1_end
   22 0000000A F850 5B04       LDR              r5, [r0], #4
   23 0000000E F851 6B04       LDR              r6, [r1], #4
   24 00000012 4435            ADD              r5, r5, r6
   25 00000014 F842 5B04       STR              r5, [r2], #4
   26 00000018 F104 0401       ADD              r4, r4, #1
   27 0000001C E7F3            B                aTask1_loop
   28 0000001E         aTask1_end
   29 0000001E 4610            MOV              r0, r2
   30 00000020 BD70            POP              {r4-r6, pc}
   31 00000022                 ENDP
   32 00000022         
   33 00000022         ; extern void aTask2(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   34 00000022         ; M_n = M & (n << 16)
   35 00000022         aTask2  PROC
   36 00000022 B5F0            PUSH             {r4-r7, lr}
   37 00000024         ;r0 -> array1
   38 00000024         ;r1 -> array2
   39 00000024         ;r2 -> array3
   40 00000024         ;r3 -> 0xnnnnMMMM -> M
   41 00000024         ;r4 -> i
   42 00000024         ;r7 -> n
   43 00000024 F04F 0400       MOV              r4, #0
   44 00000028 EA4F 4723       MOV              r7, r3, ASR #16
   45 0000002C EA4F 4303       LSL              r3, #16
   46 00000030 EA4F 4323       ASR              r3, #16
   47 00000034         aTask2_loop
   48 00000034 42BC            CMP              r4, r7
   49 00000036 DA0C            BGE              aTask2_end
   50 00000038 F850 5B04       LDR              r5, [r0], #4
   51 0000003C F851 6B04       LDR              r6, [r1], #4
   52 00000040 FA45 F507       ASR              r5, r7
   53 00000044 FB05 F506       MUL              r5, r5, r6
   54 00000048 F842 5B04       STR              r5, [r2], #4
   55 0000004C F104 0401       ADD              r4, #1
   56 00000050 E7F0            B                aTask2_loop



ARM Macro Assembler    Page 2 


   57 00000052         aTask2_end
   58 00000052 BDF0            POP              {r4-r7, pc}
   59 00000054                 ENDP
   60 00000054         
   61 00000054         ; extern void aTask3(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   62 00000054         ; M_n = M & (n << 16)
   63 00000054         aTask3  PROC
   64 00000054 B5F0            PUSH             {r4-r7, lr}
   65 00000056         ; r0 -> array1
   66 00000056         ; r1 -> array2
   67 00000056         ; r2 -> array3
   68 00000056         ; r3 -> 0xnnnnMMMM -> M
   69 00000056         ; r4 -> i
   70 00000056         ; r7 -> n
   71 00000056 461C            MOV              r4, r3
   72 00000058 EA4F 4723       MOV              r7, r3, ASR #16
   73 0000005C EA4F 4404       LSL              r4, #16
   74 00000060 EA4F 4424       ASR              r4, #16
   75 00000064         aTask3_loop
   76 00000064 F850 5B04       LDR              r5, [r0], #4
   77 00000068 F851 6B04       LDR              r6, [r1], #4
   78 0000006C FA05 F507       LSL              r5, r7
   79 00000070 FB95 F5F6       SDIV             r5, r5, r6
   80 00000074 F842 5B04       STR              r5, [r2], #4
   81 00000078 F1A4 0401       SUB              r4, #1
   82 0000007C B104            CBZ              r4, aTask3_end
   83 0000007E E7F1            B                aTask3_loop
   84 00000080         aTask3_end
   85 00000080 BDF0            POP              {r4-r7, pc}
   86 00000082                 ENDP
   87 00000082         
   88 00000082         
   89 00000082         ; extern void aTask3(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   90 00000082         ; M_n = M & (n << 16)
   91 00000082         aTask4  PROC
   92 00000082 B5F0            PUSH             {r4-r7, lr}
   93 00000084         ; r0 -> array1
   94 00000084         ; r1 -> array2
   95 00000084         ; r2 -> array3
   96 00000084         ; r3 -> 0xnnnnMMMM -> M
   97 00000084         ; r4 -> i
   98 00000084         ; r7 -> n
   99 00000084 EA4F 4303       LSL              r3, #16
  100 00000088 EA4F 4323       ASR              r3, #16
  101 0000008C         aTask4_loop
  102 0000008C F850 5B04       LDR              r5, [r0], #4
  103 00000090 F851 6B04       LDR              r6, [r1], #4
  104 00000094 FB95 F4F6       SDIV             r4, r5, r6
  105 00000098 FB05 6714       MLS              r7, r5, r4, r6
  106 0000009C F842 4B04       STR              r4, [r2], #4
  107 000000A0 F1A3 0301       SUB              r3, #1
  108 000000A4 B103            CBZ              r3, aTask4_end
  109 000000A6 E7F1            B                aTask4_loop
  110 000000A8         aTask4_end
  111 000000A8 BDF0            POP              {r4-r7, pc}
  112 000000AA                 ENDP
  113 000000AA         



ARM Macro Assembler    Page 3 


  114 000000AA                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --depend=.
\objects\workshop4_asm_functions_prob.d -o.\objects\workshop4_asm_functions_pro
b.o -I.\RTE\_prob -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:
\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --
predefine="ARMCM4_FP SETA 1" --list=.\listings\workshop4_asm_functions_prob.lst
 source\workshop4_asm_functions_prob.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

aTask1 00000000

Symbol: aTask1
   Definitions
      At line 16 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 3 in file source\workshop4_asm_functions_prob.s
Comment: aTask1 used once
aTask1_end 0000001E

Symbol: aTask1_end
   Definitions
      At line 28 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 21 in file source\workshop4_asm_functions_prob.s
Comment: aTask1_end used once
aTask1_loop 00000006

Symbol: aTask1_loop
   Definitions
      At line 19 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 27 in file source\workshop4_asm_functions_prob.s
Comment: aTask1_loop used once
aTask2 00000022

Symbol: aTask2
   Definitions
      At line 35 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 4 in file source\workshop4_asm_functions_prob.s
Comment: aTask2 used once
aTask2_end 00000052

Symbol: aTask2_end
   Definitions
      At line 57 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 49 in file source\workshop4_asm_functions_prob.s
Comment: aTask2_end used once
aTask2_loop 00000034

Symbol: aTask2_loop
   Definitions
      At line 47 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 56 in file source\workshop4_asm_functions_prob.s
Comment: aTask2_loop used once
aTask3 00000054

Symbol: aTask3
   Definitions
      At line 63 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 5 in file source\workshop4_asm_functions_prob.s
Comment: aTask3 used once
aTask3_end 00000080

Symbol: aTask3_end



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 84 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 82 in file source\workshop4_asm_functions_prob.s
Comment: aTask3_end used once
aTask3_loop 00000064

Symbol: aTask3_loop
   Definitions
      At line 75 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 83 in file source\workshop4_asm_functions_prob.s
Comment: aTask3_loop used once
aTask4 00000082

Symbol: aTask4
   Definitions
      At line 91 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 6 in file source\workshop4_asm_functions_prob.s
Comment: aTask4 used once
aTask4_end 000000A8

Symbol: aTask4_end
   Definitions
      At line 110 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 108 in file source\workshop4_asm_functions_prob.s
Comment: aTask4_end used once
aTask4_loop 0000008C

Symbol: aTask4_loop
   Definitions
      At line 101 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 109 in file source\workshop4_asm_functions_prob.s
Comment: aTask4_loop used once
workshop4_asm_functions_prob 00000000

Symbol: workshop4_asm_functions_prob
   Definitions
      At line 1 in file source\workshop4_asm_functions_prob.s
   Uses
      None
Comment: workshop4_asm_functions_prob unused
13 symbols
348 symbols in table
